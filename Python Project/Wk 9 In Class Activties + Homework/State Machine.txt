Output is a function of the current input

O = f(i)

O_t = f(i_t, i_(t-1), i_(t-2) # all previous input, memory/history)

I/P --> State / Memory --> O/P

1) Output function
2) Next state function

button can be I (pressed) or 0 (not pressed)

State transition Diagram

O --> I
Current State --> Next State


Forward Process
Input: press button
Output: I

Back Process
Input: press button
Output: 0

State Machines
Object Oriented --> Inheritance

SM - attributes
   - methods --> start()
	     --> step(inp)
	     --> transduce()

LB / CM accent --> start_state
	       --> get_next_values(self, state, inp)
	       --> next_state, output

1. output f(i,s)
2. nextstate function

Step
1. Is it a state machine? O != f(i), O == f(i, s)
2. What is the state?	--> What should be remembered
3. Is the state finite?

if True:
	return state transition diagram
	CS --> NS
else:
	return step table
_____1__2__3__4__5__6__7__8__9_
CS_____________________________
I/P____________________________
NS_____________________________
O/P____________________________

Checkoff
1. Robot spiralling path
2. Sensor range # Check range
3. Do not cross boundary # Reach boundary and stop